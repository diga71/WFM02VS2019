@page "/operator"
@using Domain
@inject Domain.Service.OperatorService OperatorService
@inject NavigationManager NavigationManager

@*<OperatorDetail operatore="@OperatoreDetail">
</OperatorDetail>*@


<div>
    <h1>List operator</h1>

    @if (operators == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <BlazorGrid Items="@operators" PageSize="3">
            <GridHeader>
                <th>#</th>
                <th>Last name</th>
                <th>First name</th>
                <th>EMail</th>
                <th></th>
            </GridHeader>
            <GridRow>
                    <td>@context.Id.ToString()</td>
                    <td>@context.LastName</td>
                    <td>@context.FirstName</td>
                    <td>@context.EMail</td>
                    <td @onclick="@(e => ClickEditRow(e, context))"><i class="fa fa-pencil-square-o" aria-hidden="true"></i></td>
            </GridRow>
        </BlazorGrid>
    }
</div>

@code {

    List<Domain.Operator> operators;

    //void DoubleClickRow(MouseEventArgs e, Domain.Operator operatore)
    //{
    //    NavigationManager.NavigateTo($"operatorDetail/{ operatore.Id}");        
    //}

    void ClickEditRow(MouseEventArgs e, Domain.Operator operatore)
    {
        NavigationManager.NavigateTo($"operatorDetail/{ operatore.Id}");
    }

    protected override async Task OnInitializedAsync()
    {
        operators = await OperatorService.GetOperatorsAsync();
    }
}
